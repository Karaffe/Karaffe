class Q1 < CLI {
  ctor {
    1..5 forEach {
      println("Hello World")
    }
  }
}

class Q2 < CLI {
  ctor {
    1..args[0] forEach {
      println("Hello World! %d", _)     
    }
  }
}

class FizzBuzz < CLI {
  ctor {
    def fzbz = x => {
      match x {
        case x % 15 "FizzBuzz"
        x % 3  := "Fizz"
        x % 5  := "Buzz"
        x      := x
      }
    }
    (1..100).map(fzbz).forEach(println)
  }
}

class Hoge {
    DEF Ident Type
    DEF Ident EQ expr
    DEF  Type = expr
    ClassModifierList DEF Ident Type EQ expr
    AnnotationList ClassModifierList DEF Ident Type EQ expr
    FUNC Ident LPAREN RPAREN
    FUNC Ident LPAREN RPAREN LBRACKET RBRACKET
    FUNC Ident LPAREN RPAREN Type LBRACKET RBRACKET
    FUNC Ident LPAREN ArgumentList RPAREN Type LBRACKET RBRACKET
    FUNC Ident = LambdaExpression
    AnnotationList MethodModifierList FUNC Ident LPAREN ArgumentList RPAREN Type FunctionBody
}

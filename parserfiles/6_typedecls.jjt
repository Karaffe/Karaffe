//6_typedecls.jjt
void TypeDecl() #void:{}
{
    LOOKAHEAD(Annotations() ClassModifiers() "type") ClassDecl() |
    LOOKAHEAD(Annotations() EnumModifiers() "enum") EnumDecl() |
    LOOKAHEAD(Annotations() ClassModifiers() "case" "type") AlgebraicDataTypeDecl() | 
    LOOKAHEAD(Annotations() InterfaceModifiers() "interface") InterfaceDecl() | 
    LOOKAHEAD(Annotations() TypeAliasModifiers() "typealias") TypeAliasDecl()
}

//**********************************************************************
//Class Decl
//**********************************************************************
void ClassDecl():{}
{
    Annotations() ClassModifiers() "type" Identifier() (TypeParameters())? (ParenFormalParams())? (SuperTypeAndInterfaces())? ClassBody()
}

void ClassModifiers():{}
{
    (ClassModifier())*
}

void ClassModifier() #void:{}
{
    PublicModifier()|
    ProtectedModifier()|
    PrivateModifier() |
    AbstractModifier()|
    StaticModifier()|
    FinalModifier()
}

void TypeParameters():{}
{
    "[" TypeParameter() ("," TypeParameter())* "]"
}

void TypeParameter():{}
{
    Identifier() (TypeParameters())? (TypeBound())?
}

void TypeBound():{}
{
    "<" ClassType() (AdditionalBound())*
}

void Type():{}
{
    LOOKAHEAD(ClassType() "->") FuncType() |
    LOOKAHEAD(ClassType()) ClassType()
}

void ClassType():{}
{
    AmbiguousName() (LOOKAHEAD(TypeParameters()) TypeParameters())?
}

void FuncType():{}
{
    ClassType() "->" Type()
}

void AdditionalBound():{}
{
    "&" ClassType()
}

void SuperTypeAndInterfaces():{}
{
    "<" ClassType() ("," ClassType())*
}

void ClassBody():{}
{
    "{" (ClassBodyDecl())* "}"
}

void ClassBodyDecl()#void:{}
{
    LOOKAHEAD(CtorModifiers() "func" "this") ClassCtorDecl() |
    LOOKAHEAD(FuncModifiers() "func" Identifier()) FuncDecl() |
    LOOKAHEAD(FieldModifiers() "def" Identifier()) FieldDecl() |
    ImportStmt() | 
    FuncAlias()
}

void ClassCtorDecl():{}
{
    CtorModifiers() "func" "this" (TypeParameters())? ParenFormalParams() CtorBody()
}

void CtorModifiers():{}
{
    (CtorModifier())*
}

void CtorModifier()#void:{}
{
    PublicModifier() |
    ProtectedModifier() |
    PrivateModifier()
}

void FormalParameters():{}
{
    (LOOKAHEAD((VariableModifier())? Identifier() Type() ",") FormalParameter())* LastFormalParamter()
}

void FormalParameter():{}
{
    (VariableModifier())? Identifier() Type() ","
}

void LastFormalParamter():{}
{
    (VariableModifier())? Identifier() Type() ("*" #Varargs())?
}

void VariableModifier():{}
{
    FinalModifier()
}

void CtorBody():{}
{
    "{" (LOOKAHEAD(ExplicitCtorInvocation()) ExplicitCtorInvocation())? BlockStmts() "}"
}

void ExplicitCtorInvocation():{}
{
    ThisCtorInvocation() | 
    SuperCtorInvocation()
}

void ThisCtorInvocation():{}
{
    "this" ParenArguments()
}

void SuperCtorInvocation():{}
{
    "super" ParenArguments()
}

void BlockStmts():{}
{
    (LOOKAHEAD(BlockStmt()) BlockStmt())*
}

void BlockStmt():{}
{
    LocalValDecl() |
    Expression() |
    Statement() 
}

void LocalValDecl():{}
{
    (VariableModifier())? "def" Identifier() (Type())? "=" VariableInitializer()
}

void VariableInitializer():{}
{
    Expression()
}

void FieldDecl():{}
{
    FieldModifiers() "def" Identifier() (Type() (TypeParameters())?)? "=" FieldInitializer()
}

void FieldModifiers():{}
{
    (FieldModifier())*
}

void FieldModifier()#void:{}
{
    PublicModifier() | 
    ProtectedModifier() | 
    PrivateModifier() |
    StaticModifier() |
    VarModifier()
}


void FieldInitializer():{}
{
    Expression() 
}

void FuncDecl():{}
{
    FuncModifiers() "func" Identifier() (TypeParameters())? ParenFormalParams() (ReturnType())? (FuncBody())?
}

void FuncModifiers():{}
{
    (FuncModifier())*
}

void FuncModifier()#void:{}
{
    PublicModifier() |
    ProtectedModifier() |
    PrivateModifier() | 
    AbstractModifier() |
    StaticModifier() |
    VarModifier() |
    FinalModifier() |
    OverrideModifier()
}

void ParenFormalParams():{}
{
    "(" (FormalParameters())? ")"
}

void ReturnType():{}
{
    Type()
}

void FuncBody():{}
{
    "{" BlockStmts() "}" |
    "=" Expression()
}

//**********************************************************************
//Algebraic Data Type
//**********************************************************************
void AlgebraicDataTypeDecl():{}
{
    Annotations() ClassModifiers() "case" "type" Identifier() (TypeParameters())? "=" AlgebraicDataTypeBody() ("|" AlgebraicDataTypeBody())*
}

void AlgebraicDataTypeBody():{}
{
    Identifier() (TypeParameters())? (ParenFormalParams())? (SuperTypeAndInterfaces())?
}

//**********************************************************************
//Interface
//**********************************************************************
void InterfaceDecl():{}
{
    Annotations() InterfaceModifiers() "interface" Identifier() (TypeParameters())? (ExtendsInterfaces())? InterfaceBody()
}

void InterfaceModifiers():{}
{
    (InterfaceModifier())*
}

void InterfaceModifier():{}
{
    PublicModifier() 
}

void ExtendsInterfaces():{}
{
    "<" ClassType() ("," ClassType())*
}

void InterfaceBody():{}
{
    "{" (InterfaceMember())* "}"
}

void InterfaceMember():{}
{
    LOOKAHEAD(ConstantDecl()) ConstantDecl() |
    LOOKAHEAD(InterfaceMethodDecl()) InterfaceMethodDecl() | 
    LOOKAHEAD(ClassDecl()) ClassDecl() |
    LOOKAHEAD(InterfaceDecl()) InterfaceDecl()
}

void ConstantDecl():{}
{
    (StaticModifier())? "def" Identifier() Identifier() (TypeParameters())? ("=" VariableInitializer())?
}

void InterfaceMethodDecl():{}
{
    (FuncModifier())* "def" Identifier() (TypeParameters())? ParenFormalParams() (ReturnType())? ("=" FuncBody())?
}

//**********************************************************************
//TypeAlias
//**********************************************************************
void TypeAliasDecl():{}
{
    Annotations() TypeAliasModifiers() "typealias" Identifier() Identifier()
}

void TypeAliasModifiers():{}
{
    (TypeAliasModifier())*
}

void TypeAliasModifier():{}
{
    PublicModifier() |
    ProtectedModifier() |
    PrivateModifier()
}

//**********************************************************************
//Enum
//**********************************************************************
void EnumDecl():{}
{
    Annotations() EnumModifiers() "enum" EnumName() "[" EnumMembers() "]"
}

void EnumModifiers():{}
{
    (EnumModifier())*
}

void EnumModifier():{}
{
    PublicModifier() |
    ProtectedModifier() |
    PrivateModifier() |
    StaticModifier()
}

void EnumName():{}
{
    Identifier()
}

void EnumMembers():{}
{
    Identifier() ("," Identifier())*
}


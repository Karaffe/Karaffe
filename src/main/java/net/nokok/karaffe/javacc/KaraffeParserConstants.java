/* Generated By:JavaCC: Do not edit this line. KaraffeParserConstants.java */
package net.nokok.karaffe.javacc;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface KaraffeParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SingleLineComment = 3;
  /** RegularExpression Id. */
  int BlockComment = 4;
  /** RegularExpression Id. */
  int Statement = 5;
  /** RegularExpression Id. */
  int Declaration = 6;
  /** RegularExpression Id. */
  int VariableDeclaration = 7;
  /** RegularExpression Id. */
  int Expr = 8;
  /** RegularExpression Id. */
  int FunctionCall = 9;
  /** RegularExpression Id. */
  int Arguments = 10;
  /** RegularExpression Id. */
  int ConstArgument = 11;
  /** RegularExpression Id. */
  int Identifier = 12;
  /** RegularExpression Id. */
  int VariableId = 13;
  /** RegularExpression Id. */
  int TypeId = 14;
  /** RegularExpression Id. */
  int EqualToken = 15;
  /** RegularExpression Id. */
  int NonZero = 16;
  /** RegularExpression Id. */
  int Zero = 17;
  /** RegularExpression Id. */
  int Digit = 18;
  /** RegularExpression Id. */
  int Alphabet = 19;
  /** RegularExpression Id. */
  int Upper = 20;
  /** RegularExpression Id. */
  int Lower = 21;
  /** RegularExpression Id. */
  int NewLine = 22;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "<SingleLineComment>",
    "<BlockComment>",
    "<Statement>",
    "<Declaration>",
    "<VariableDeclaration>",
    "<Expr>",
    "<FunctionCall>",
    "<Arguments>",
    "<ConstArgument>",
    "<Identifier>",
    "<VariableId>",
    "<TypeId>",
    "\"=\"",
    "\"[1-9]\"",
    "\"0\"",
    "<Digit>",
    "<Alphabet>",
    "<Upper>",
    "<Lower>",
    "<NewLine>",
  };

}
